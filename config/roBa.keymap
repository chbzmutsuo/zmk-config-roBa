#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6
#define U_MOUSE_MOVE_MAX 1000

#undef MOVE_UP
#undef MOVE_DOWN
#undef MOVE_LEFT
#undef MOVE_RIGHT

#define MOVE_UP MOVE_VERT(-U_MOUSE_MOVE_MAX)
#define MOVE_DOWN MOVE_VERT(-U_MOUSE_MOVE_MAX)
#define MOVE_LEFT MOEV_HOR(-U_MOUSE_MOVE_MAX)
#define MOVE_RIGHT MOVE_HOR(-U_MOUSE_MOVE_MAX)


// #includeのあとのあたりにスクロール量を変更
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 100

//  behaviors に追加
// 新しいスクロール動作の追加
        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;
            // 追加: スクロールのタップ時間を設定 (20ms)
            tap-ms = <20>;
        };

// 設定したいレイヤー
sensor-bindings = <&scroll_up_down>;


&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <1 2>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <3 2>;
        };

        double_quotation {
            bindings = <&kp SQT>;
            key-positions = <19 20>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <7 6>;
        };

        plus {
            bindings = <&kp EQUAL>;
            key-positions = <8 7>;
        };

        to_window_layer {
            bindings = <&mo 2>;
            key-positions = <12 13>;
        };

        escape {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
        };
    };

    macros {
        PW: PW {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp I &kp M &kp E &kp S &kp P &kp A &kp C &kp E &kp R &kp N8 &kp N1 &kp N7>;
            label = "PW";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q           &kp W         &kp E             &kp R      &kp T                                         &kp Y                            &kp U  &kp I      &kp O    &kp P
&kp A           &kp S         &kp D             &kp F      &kp G  &kp LS(LG(S))         &kp SQT          &kp H                            &kp J  &kp K      &kp L    &kp SEMICOLON
&kp Z           &kp X         &kp C             &kp V      &kp B  &kp COLON             &kp MINUS        &kp N                            &kp M  &kp COMMA  &kp DOT  &kp SLASH
&kp LEFT_SHIFT  &kp LEFT_ALT  &kp LEFT_COMMAND  &kp SPACE  &mo 6  &kp LEFT_CONTROL      &lt 3 BACKSPACE  &mt LA(LEFT_CONTROL) LANGUAGE_1                             &mo 1
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        ARROW {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans         &trans          &mo 5           &trans           &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &mkp MB4       &mkp MB1        &kp UP_ARROW    &mkp MB2         &mkp MB5
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &kp BACKSPACE  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &mkp MB1
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &kp ENTER                                                       &trans
            >;

            sensor-bindings = <&inc_dec_kp PAGE_UP PAGE_DOWN>;
        };

        WINDOW {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &kp LS(LG(LC(LEFT)))  &kp LS(LA(LC(UP_ARROW)))  &kp LS(LG(LC(RIGHT)))        &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &kp LS(LA(LC(LEFT)))  &kp LG(M)                 &kp LS(LC(LA(RIGHT_ARROW)))  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans                &trans                    &trans                       &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                                                               &trans
            >;
        };

        NUM {
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN   &kp HASH      &kp DLLR      &kp PERCENT                                        &kp CARET             &kp AMPERSAND     &kp ASTERISK       &kp GRAVE              &PW
&kp NUMBER_1     &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5  &kp LC(LA(KP_NUMBER_0))      &trans  &kp NUMBER_6          &kp NUMBER_7      &kp NUMBER_8       &kp NUMBER_9           &kp NUMBER_0
&trans           &trans        &trans        &trans        &trans        &trans                       &trans  &kp LEFT_PARENTHESIS  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp RIGHT_PARENTHESIS  &trans
&trans           &trans        &trans        &trans        &trans        &trans                       &trans  &trans                                                                            &trans
            >;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans                &kp LS(LA(LC(UP_ARROW)))  &trans                 &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &kp LC(LA(LS(LEFT)))  &kp LG(M)                 &kp LS(LA(LC(RIGHT)))  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans                &trans                    &trans                 &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                                                         &trans
            >;
        };

        FUNCTION {
            bindings = <
&trans  &trans  &trans  &trans  &trans                       &trans  &trans  &trans  &trans  &trans
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &trans      &kp F12  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10
&trans  &trans  &trans  &trans  &trans  &trans      &trans   &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans   &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
